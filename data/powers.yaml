pehkui-power:
    title: Pehkui
    text: |
        If you're not super adept at making powers or origins, do NOT make a power using pehkui. You are going to confuse yourself and your brain will explode. Really familiar yourself with simpler concepts first. If you're more comfortable with making origins, then you can continue on this page.

        Modifying your player size is one of the most common things that requires that you install Pehkui mod in addition to the origins mod, but pehkui can be used to modify your mining speed, block reach, and other things with the player as well. You can get [the Pehkui mod here (click)](https://www.curseforge.com/minecraft/mc-mods/pehkui).

        If you just want to modify player size, the simplest way is probably just to install the Extra Origins mod and use the custom `extraorigins:modify_size` power type it provides. [Here's one example (click here)](https://github.com/MoriyaShiine/extra-origins/blob/master/src/main/resources/data/extraorigins/powers/bite_sized.json#L4) of that power type in use. If you're using the Origin Creator, you can use the "custom" option in any drop down where it normally says "single" or "multiple" and type in `extraorigins:modify_size` for the power type yourself.

        If you don't want to just modify player size or want more control over pehkui attributes, you'll have to use an "action" power type and run the /pehkui command through entity actions. Most likely, you'll want to use the [`origins:action_on_callback`](https://origins.readthedocs.io/en/latest/types/power_types/action_on_callback/) power type in combination with the [`origins:execute_command`](https://origins.readthedocs.io/en/latest/types/entity_action_types/execute_command/) entity action. You'll want to test how the command works in-game and also test the variety of entity actions that exist already. This is all the help that most people can provide you.
attribute-power:
    title: Attribute
    text: |
        The [Attribute `origins:attribute` (click for more info)](https://origins.readthedocs.io/en/latest/types/power_types/attribute/) power type gives/takes away certain numeric values (e.g. max-health/armor/speed) from its user.

        This power can provide multiple `modifiers` at once in a list, or just a single `modifier` only. Every modifier takes an "attribute" name (specifying what to modify), an "operation" (specifying how to modify), and a value (specifying how much to modify by).

        Common attribute names ([for full list click here](https://minecraft.fandom.com/wiki/Attribute)) are:

        - `generic.max_health` - maximum health in half hearts. Normally 20.0.
        - `generic.knockback_resistance` - the percentage number of knockback that's ignored (1.0 is 100% or no knockback, 0.5 is 50% or half knockback)
        - `generic.movement_speed` - speed of movement; for players, multiply by about 43 for blocks/second (1 block/s is about 0.023). It's recommended you modify this with a multiply operation.
        - `generic.attack_damage` - attack damage in half hearts.
        - `generic.armor` - armor points (20 for full diamond armor)
        - `generic.armor_toughness` - [armor toughness](https://minecraft.fandom.com/wiki/Armor#Armor_toughness) (8 for diamond armor, 12 for netherite)
        - `generic.attack_knockback` - knockback done by attacks
        - `generic.attack_speed` - number of full strength attacks per second. Defaults to 4.0 with a fist. Other weapons set this value directly.
        - `generic.luck` - "improves" loot from loot tables (some items become more likely to appear); in vanilla, this only applies to fishing. Defaults to 0.0 (meaning multiply operations don't work). This number has nothing to do with a percentage; each level of the status effect luck adds 1.0 to this attribute.

        As for the operation, you only need to know that `addition` adds/subtracts a raw number to the value, and `multiply_base` adds/subtracts a percentage, and all `addition` modifiers occur before `multiply_base` modifiers. Use `addition` when you have a clear number of something (e.g., number of half hearts, armor points, knockback resistance, etc), and `multiply_base` when you don't have a clear number (movement speed).

        A value of 2.5 for `addition` in `generic.max_health` adds a heart and a quarter, while with `generic.knockback_resistance` it adds 2.5%. With `generic.movement_speed`, it adds about 108 blocks/second (2.5*43 is about 108).
        
        A value of 0.5 for `multiply_base` in `generic.max_health` multiplies your health by 1.5x (5 hearts normally), while with `generic.knockback_resistance` it adds nothing (1.5 times no knockback resistance by default is 0). With `generic.movement_speed`, it multiplies your movement speed by 1.5x.

        If you really want to know, `multiply_total` is the same as `multiply_base`, but percentages stack with each other. So while `multiply_base` values of 0.2 (+20% each) would only yield a net result of 0.4 (+40%), two `multiply_total` values of 0.2 (20%) would stack and yield a net result of 0.44 (+44%). There's a bonus 4% (which is 20% of 20%).

        If you're updating `generic.max_health`, there is an additional field called `update_health` for this power that defaults to be true (on). If you set it to false (off), the player's health percentage will not be preserved to the new maximum health. For example, imagine the user has 5 hearts remaining and their max health changes from 10 hearts to 20. If true (default), their health will change to 10 hearts (to preserve 50%). If false, their health will remain at 5 hearts.

        If you want more control over the modifier operation, the [Modify Attribute power type (click here to learn more about modify powers)](#modify-power) provides many more operators that apply to the same attributes here.
status-effect-power:
    title: Status Effect
    text: 
toggle-vision-power:
    title: Toggle Night Vision
    text: 
creative-flight-power:
    title: Creative Flight
    text: 
elytra-flight-power:
    title: Elytra Flight
    text: 
effect-immunity-power:
    title: Effect Immunity
    text: 
fire-immunity-power:
    title: Fire Immunity
    text: 
projectile-power:
    title: Projectile
    text: 
inventory-power:
    title: Inventory
    text: 
invisibility-power:
    title: Invisibility
    text: 
invulnerability-power:
    title: Invulnerability
    text: 
keep-inventory-power:
    title: Keep Inventory
    text: 
launch-power:
    title: Launch
    text: 
loot-table-power:
    title: Loot Table
    text: 
other-power:
    title: Other
    text: 



velocity-action:
    title: Velocity Action
    text: 
xp-action:
    title: XP Action
    text: 
block-action:
    title: Block Action
    text: 
effect-action:
    title: Effect Action
    text: 
health-action:
    title: Health Action
    text: 
open-inventory-action:
    title: Open Inventory Action
    text: 
inventory-action:
    title: Inventory Action
    text: 
sound-action:
    title: Sound Action
    text: 
spawn-action:
    title: Spawn Action
    text: 
explode-action:
    title: Explode Action
    text: 
fire-action:
    title: Fire Action
    text: 
hunger-action:
    title: Hunger Action
    text: 
command-action:
    title: Command Action
    text: 
other-action:
    title: Other Action
    text: 



biome-cond:
    title: Biome
    text: 
block-cond:
    title: Block
    text: 
time-cond:
    title: Time
    text: 
dimension-cond:
    title: Dimension
    text: 
sky-cond:
    title: Sky
    text: 
stat-cond:
    title: Stat
    text: 
rain-cond:
    title: Rain
    text: 
fire-cond:
    title: Fire
    text: 
riding-cond:
    title: Riding
    text: 
score-cmd-cond:
    title: Score/Command
    text: 
moving-cond:
    title: Moving
    text: 
experience-cond:
    title: Experience
    text: 
other-cond:
    title: Other
    text: 